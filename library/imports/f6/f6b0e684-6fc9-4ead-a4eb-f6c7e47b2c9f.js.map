{"version":3,"sources":["assets/script/merge/manager/Uimanager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { LAYER } from '../define/TypeDefine';\n\nexport default class Uimanager {\n    private static _ins: Uimanager;\n    public static get instance() {\n        if (!this._ins) {\n            this._ins = new Uimanager();\n        }\n\n        return this._ins;\n    }\n\n    // 层级依托的场景\n    scene: cc.Node = null;\n\n    // 层级\n    layerArr: cc.Node[] = [];\n\n    constructor() { }\n\n    init(node: cc.Node) {\n        this.scene = node;\n        this.initLayer();\n    }\n\n    initLayer(): void {\n        this.layerArr = [];\n\n        // UI层\n        const node_ui = new cc.Node(LAYER.UI);\n        node_ui.width = this.scene.width;\n        node_ui.height = this.scene.height;\n        this.scene.addChild(node_ui);\n        this.layerArr.push(node_ui);\n\n        // 弹窗层\n        const node_dialog = new cc.Node(LAYER.DIALOG);\n        node_dialog.width = this.scene.width;\n        node_dialog.height = this.scene.height;\n        this.scene.addChild(node_dialog);\n        this.layerArr.push(node_dialog);\n\n        // 提示层\n        const node_tip = new cc.Node(LAYER.TIP);\n        node_tip.width = this.scene.width;\n        node_tip.height = this.scene.height;\n        this.scene.addChild(node_tip);\n        this.layerArr.push(node_tip);\n\n        // 引导层\n        const node_guide = new cc.Node(LAYER.GUIDE);\n        node_guide.width = this.scene.width;\n        node_guide.height = this.scene.height;\n        this.scene.addChild(node_guide);\n        this.layerArr.push(node_guide);\n    }\n\n    getLayer(name: LAYER): cc.Node {\n        const node = this.scene.getChildByName(name);\n        return node;\n    }\n\n    add(node: cc.Node, layerType: LAYER) {\n        const layerNode = this.getLayer(layerType);\n\n        if (!layerNode) {\n            console.warn('UIManager: 没有这个层级', layerType);\n            return;\n        }\n\n        layerNode.addChild(node);\n    }\n\n    // 动态显示需要的层级\n    udpateLayerShow(): void {\n        for (let i = 0; i < this.layerArr.length; i++) {\n            this.layerArr[i].active = this.layerArr[i].childrenCount > 0;\n        }\n    }\n\n    /**\n     * 预制件加载\n     * @param path\n     */\n    async loadPrefab(path: string): Promise<any> {\n        return new Promise(async (resolve, reject) => {\n            const load = async () => new Promise((rsv, rjt) => {\n                const tot = setTimeout(() => {\n                    console.debug(`[loadPefab timeout] ${path}加载超时`)\n                    rjt(`loadPefab 连接超时${path}`);\n                }, 10000);\n                cc.resources.load(path, (err, res) => {\n                    clearTimeout(tot);\n\n                    if (err) {\n                        rjt(err);\n                    } else {\n                        rsv(res);\n                    }\n                });\n            })\n\n            await load().then((res) => {\n                resolve(res);\n            })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n}\nexport const uimanager = Uimanager.instance;\n"]}
{"version":3,"sources":["assets/script/utils/Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GlobalDefines } from '../common/consts/GlobalDefines';\nimport { Logger } from './logger';\n\nexport class Utils {\n    static async sleep(thisObj: any, duration: number) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                this.invokeCallback(resolve);\n            }, thisObj, duration);\n        }).catch((reason) => { });\n    }\n\n    static invokeCallback(cb: Function, ...optionalParams: any[]) {\n        if (cb && typeof (cb) === 'function') {\n            cb.apply(null, optionalParams);\n        }\n    }\n\n    static safeCallFunc(fn, thisObj) {\n        if (fn && typeof fn === 'function') {\n            fn.apply(thisObj);\n        }\n    }\n\n    // Returns a random integer between min (included) and max (excluded)\n    static randomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    // Returns a random integer between min (included) and max (included)\n    static randomIntInclusive(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    static randomFloat(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    static randomByList(rateList: Array<number>) {\n        rateList.map((value, index, array) => (array[index] = ~~array[index - 1] + value));\n        const r = this.randomIntInclusive(1, rateList[rateList.length - 1]);\n        for (let i = rateList.length - 1; i >= 0; i--) {\n            const cur = rateList[i];\n            const last = ~~rateList[i - 1];\n            if (last < r && r <= cur) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n    // 获得数组内的随机值\n    static getRandomByArr(arr) {\n        const index = this.randomInt(0, arr.length);\n        return arr[index];\n    }\n\n    static modByLimit(num: number, limit: number) {\n        return (num - 1) % limit + 1;\n    }\n\n    static isNullOrEmpty(str: string): boolean {\n        return !str || str == '' || str == 'null';\n    }\n\n    static qrSceneOption(data: any): any {\n        if (!data) {\n            return {};\n        }\n\n        const scene = decodeURIComponent(data);\n        const option = {};\n        for (const t of scene.split('&')) {\n            const l = t.split('=');\n            option[l[0]] = l[1];\n        }\n\n        return option;\n    }\n\n    static formatTimeExt(sec: any, showHour = false) {\n        if (~~sec <= 0) {\n            return showHour ? '00时00分00秒' : '00分00秒';\n        }\n\n        const hour = Math.floor(sec / 3600).toString();\n        const second = Math.floor(sec % 3600 % 60).toString();\n        const minute = showHour ? Math.floor(sec % 3600 / 60) : Math.floor(sec / 60).toString();\n        if (showHour) {\n            const arr = [hour, minute, second].map((n) => (`${n}`[1] ? n : `0${n}`));\n            return `${arr[0]}时${arr[1]}分${arr[2]}秒`;\n        }\n\n        const arr = [minute, second].map((n) => (`${n}`[1] ? n : `0${n}`));\n        return `${arr[0]}分${arr[1]}秒`;\n    }\n\n    static formatMilTime(time) {\n        if (time > 0) {\n            const tmp = Math.ceil(time * 1000);\n            return `${Math.floor(tmp / 1000)}″${tmp % 1000}`;\n        }\n\n        return '0″000';\n    }\n\n    static formatTime(sec: any, showHour = false) {\n        if (~~sec <= 0) {\n            return showHour ? '00:00:00' : '00:00';\n        }\n\n        const hour = Math.floor(sec / 3600).toString();\n        const second = Math.floor(sec % 3600 % 60).toString();\n        const minute = showHour ? Math.floor(sec % 3600 / 60) : Math.floor(sec / 60).toString();\n        if (showHour) {\n            return [hour, minute, second].map((n) => (`${n}`[1] ? n : `0${n}`)).join(':')\n        }\n\n        return [minute, second].map((n) => (`${n}`[1] ? n : `0${n}`)).join(':')\n    }\n\n    static formatTime_Date(sec: any, showYear: boolean) {\n        const d = new Date(sec * 1000);\n        // Logger.debug(\"-------\", sec, d);\n        const month = (d.getMonth() + 1).toString();\n        // Logger.debug(\"--\", month);\n        const date = d.getDate();\n        // Logger.debug(\"--\", date);\n        if (showYear) {\n            const year = d.getFullYear().toString();\n            return [year, month, date].map((n) => (`${n}`[1] ? n : `0${n}`)).join('.')\n        }\n\n        return [month, date].map((n) => (`${n}`[1] ? n : `0${n}`)).join('.')\n    }\n\n    static getWeekNumberNow(ss: number) {\n        const now = new Date(ss);\n        return this.getWeekNumber(now);\n    }\n\n    static getWeekNumber(d: Date) {\n        // Copy date so don't modify original\n        d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n        /*\n         * Set to nearest Thursday: current date + 4 - current day number\n         * Make Sunday's day number 7\n         */\n        d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n        // Get first day of year\n        const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n        // Calculate full weeks to nearest Thursday\n        const weekNo = Math.ceil((((d.getTime() - yearStart.getTime()) / 86400000) + 1) / 7);\n        // Return array of year and week number\n        return weekNo;\n    }\n\n    static getMonthM(y, m) { // 计算哪年哪月 有多少天 月份从1开始\n        if (m == 4 || m == 6 || m == 9 || m == 11) return 30;\n        if (m == 2) return (y % 4 == 0 && y % 100 != 0) || y % 400 == 0 ? 29 : 28;\n        return 31;\n    }\n\n    /**\n     * 当前本地时间戳\n     */\n    static getTimestamp() {\n        return (new Date()).getTime();\n    }\n\n    /**\n     *时间字任串传换成秒\n     * timeStr:string \"2020,8,27,0,0\" 年，月，日，时，分\n     */\n    static getOSSTime(timeStr: string) {\n        if (this.isEmpty(timeStr)) {\n            return 0;\n        }\n\n        const arr = timeStr.split(',');\n\n        const date: Date = new Date(parseInt(arr[0]), parseInt(arr[1]) - 1, parseInt(arr[2]), parseInt(arr[3]), parseInt(arr[4]), 0);\n        const time = Math.floor(date.getTime() / 1000);\n        return time;\n    }\n\n    static solveString(str: string, len: number): string {\n        if (!str) {\n            return '';\n        }\n\n        let currentlen = 0\n        let currentStr = ''\n        for (let i = 0; i < str.length; i++) {\n            if (str.charCodeAt(i) > 127 || str.charCodeAt(i) == 94) {\n                currentlen += 2\n            } else {\n                currentlen++\n            }\n\n            if (currentlen > len) {\n                return `${currentStr}...`;\n            }\n\n            currentStr += str.charAt(i)\n        }\n\n        return currentStr;\n    }\n\n    // 获取中英文混合字符串长度\n    public static mixedStrLen(str: string) {\n        let strLen = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str.substr(i, 1).charCodeAt(0) > 255) {\n                strLen += 2;\n            } else {\n                strLen++;\n            }\n        }\n\n        return strLen;\n    }\n\n    static angleToRadian(angle: number): number {\n        return angle * Math.PI / 180;\n    }\n\n    static updateNodeSpriteFrame(url: string, node: cc.Node, isFromNet: boolean = false, next: Function = undefined, ext: string = 'png') {\n        if (Utils.isNullOrEmpty(url)) {\n            return;\n        }\n\n        if (isFromNet) {\n            if (!url.startsWith('https://')) {\n                return;\n            }\n\n            cc.assetManager.loadRemote(url, { ext: `.${ext}` }, (err, texture: cc.Texture2D) => {\n                if (err) {\n                    console.error('[Utils updateNodeSpriteFrame isFromNet] url:', url, '/err:', err);\n                    return;\n                }\n\n                if (!cc.isValid(node)) {\n                    return;\n                }\n\n                Logger.debug('[Utils updateNodeSpriteFrame] texture:', texture);\n                const spriteFrame = new cc.SpriteFrame(texture);\n                const spr = node.getComponent(cc.Sprite);\n                if (spr) {\n                    spr.spriteFrame = spriteFrame;\n                }\n\n                if (!!next) {\n                    next(spriteFrame);\n                }\n            });\n        } else {\n            cc.resources.load(url, cc.SpriteFrame, ((err, spriteFrame: cc.SpriteFrame) => {\n                if (err) {\n                    console.error('[Utils updateNodeSpriteFrame isNotFromNet] url:', url, '/err:');\n                    return;\n                }\n\n                if (!cc.isValid(node)) {\n                    return;\n                }\n\n                const spr = node.getComponent(cc.Sprite);\n                if (spr) {\n                    spr.spriteFrame = spriteFrame;\n                }\n\n                if (!!next) {\n                    next(spriteFrame);\n                }\n            }));\n        }\n    }\n\n    /**\n     * 远程加载spine\n     * 注：约定spine资源文件与所在文件夹名字统一\n     */\n    public static loadSpine(url: string, node: cc.Node, success?: Function, fail?: Function) {\n        // let url = `${GameConfig.OSS_URL_BASE}${folder}/${name}`;\n        cc.assetManager.loadRemote(`${url}.json`, (err, jsonAsset: cc.JsonAsset) => {\n            if (err) {\n                fail && fail('加载json失败');\n                return;\n            }\n\n            Logger.debug('[加载Json] date:', (new Date()).getTime());\n            cc.assetManager.loadRemote(`${url}.atlas`, (err, textAsset: cc.TextAsset) => {\n                if (err) {\n                    fail && fail('加载atlas失败');\n                    return;\n                }\n\n                Logger.debug('[加载atlas] date:', (new Date()).getTime());\n                cc.assetManager.loadRemote(`${url}.png`, (err, texture2D: cc.Texture2D) => {\n                    if (err) {\n                        fail && fail('加载png失败');\n                        return;\n                    }\n\n                    Logger.debug('[加载png] date:', (new Date()).getTime());\n                    const res = { skeletonJson: jsonAsset.json, atlasText: textAsset.text, textures: [texture2D], uuid: `${url}.json`, textureNames: [`${name}.png`] };\n                    success && success(res);\n                })\n            })\n        })\n    }\n\n    public static updateSpineRes(name: string, node: cc.Node, res: { skeletonJson: any, atlasText: string, textures: cc.Texture2D[], uuid: string, textureNames: string[] }) {\n        let skeleton: sp.Skeleton = node.getComponent(sp.Skeleton);//\n        if (!skeleton) {\n            skeleton = node.addComponent('sp.Skeleton');\n        }\n\n        const asset = new sp.SkeletonData();\n        asset['_uuid'] = res.uuid;\n        asset.skeletonJson = res.skeletonJson\n        asset.atlasText = res.atlasText;\n        asset.textures = res.textures;\n        asset['textureNames'] = res.textureNames;\n        skeleton.skeletonData = asset;\n        skeleton.setAnimation(0, name, true);\n    }\n\n    static secondsToClock(seconds) {\n        seconds = Number(seconds);\n        const secs = seconds % 60;\n        let mins = (seconds - secs) / 60;\n        const hours = Math.floor(mins / 60);\n        if (hours > 0) {\n            mins %= 60;\n        }\n\n        return `${hours > 9 ? hours : `0${hours}`}:${mins > 9 ? mins : `0${mins}`}:${secs > 9 ? secs : `0${secs}`}`;\n    }\n\n    static isEmpty(v) { return v == undefined || v == '' || v == null }\n\n    public static loadSimpleBone(folder: string, name: string, next: Function) {\n        const path = `bones/${folder}/`;\n        const resources = [\n            `${path + name}_ske`,\n            `${path + name}_atlas`,\n            `${path + name}_tex`,\n        ];\n\n        cc.resources.load(resources, (err, assets) => {\n            if (err) {\n                Logger.debug('[Utils loadSimpleBone] 加载失败:', folder, '/', name);\n                return;\n            }\n\n            next(assets[0], assets[1]);\n        });\n    }\n\n    /**\n     * 加载主角龙骨资源\n     * @param name\n     * @param isHomeCourt 是否主场\n     */\n    public static loadPlayerBone(name: string, isHomeCourt: boolean, success: Function, fail?: Function) {\n        const path = 'bones/finn/';\n        const resources = [\n            path + name + (isHomeCourt ? '_ske' : '_pk_ske'),\n            path + name + (isHomeCourt ? '_atlas' : '_pk_atlas'),\n            path + name + (isHomeCourt ? '_tex' : '_pk_tex'),\n        ];\n\n        cc.resources.load(resources, (err, assets) => {\n            if (err) {\n                Logger.debug('[Utils loadSimpleBone] 加载失败:', name);\n                fail && fail(`加载失败 ${name}`);\n                return;\n            }\n\n            success(assets[0], assets[1], assets[2]);\n        });\n    }\n\n    static async releaseRes(asset: cc.Asset) {\n        cc.assetManager.releaseAsset(asset);\n    }\n\n    /**\n     * 预制件加载\n     * @param path\n     */\n    static async loadPefab(path: string, needRelease: boolean = false): Promise<any> {\n        return new Promise(async (resolve, reject) => {\n            /*\n             * if (this.prefab_need_release[path]) {\n             *     resolve(this.prefab_need_release[path]);\n             *     return;\n             * }\n             */\n            const load = async () => new Promise((rsv, rjt) => {\n                const tot = setTimeout(() => {\n                    Logger.debug(`[Utils oadPefab] ${path}加载超时`)\n                    rjt(`oadPefab 连接超时${path}`);\n                }, 10000);\n                cc.resources.load(path, (err, res) => {\n                    clearTimeout(tot);\n\n                    if (err) {\n                        rjt(err);\n                    } else {\n                        rsv(res);\n                    }\n                });\n            })\n\n            await load().then((res) => {\n                // }\n                resolve(res);\n            })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    /**\n     * 工具方法：同步读取json文件 返回JS对像\n     * @param fileName\n     */\n    static async loadConfigFromAli(url: string) {\n        /*\n         * baseUrl = baseUrl || GameConfig.OSS_URL_BASE;\n         * let url = `${baseUrl}` + fileName + \".json?\" + Math.random();\n         */\n        return new Promise((resolve, reject) => {\n            cc.assetManager.loadRemote(url, (err, jsonAsset: cc.JsonAsset) => {\n                if (err) {\n                    Logger.debug(`[DataManager loadConfig[${url}]] err:`, err);\n                    reject(`加载失败${url}`);\n                    return;\n                }\n\n                resolve(jsonAsset.json);\n            })\n        });\n    }\n\n    /**\n     * 判断给定字符串是否可转换为数字\n     * 如果给定参数为null undefine 则视其为0\n     * @param str\n     */\n    static isNum(value) {\n        if (value === '0' || value === undefined || value === null) {\n            return true;\n        }\n\n        const n = Number(value)\n        if (!isNaN(n)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    // 获取时间戳 秒\n    static getCurTime() {\n        return Math.floor(this.getCurMillisecond() / 1000)\n    }\n\n    static getCurMillisecond() {\n        return (new Date()).getTime();\n    }\n\n    static getymd(sec: number): { year: number, month: number, date: number, hour: number, minute: number, second: number, milliseconds: number } {\n        const d = new Date(sec * 1000);\n        const month = (d.getMonth() + 1);\n        const date = d.getDate();\n        const year = d.getFullYear();\n        const hour = d.getHours();\n        const minute = d.getMinutes();\n        const second = d.getSeconds();\n        const milliseconds = d.getMilliseconds();\n        return { year, month, date, hour, minute, second, milliseconds };\n    }\n    static isToday(sec: number) {\n        const curTime = this.getCurTime();\n        const inputParm = Utils.getymd(sec);\n        const curParm = Utils.getymd(curTime);\n        if (inputParm.year != curParm.year) {\n            return false;\n        }\n\n        if (inputParm.month != curParm.month) {\n            return false;\n        }\n\n        if (inputParm.date != curParm.date) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /*\n     * static getDayBeginTime(sec: number) {\n     *     let parm = Utils.getymd(sec);\n     *     let tmpDate = new Date();\n     *     tmpDate.setFullYear(parm.year);\n     *     tmpDate.setMonth(parm.month - 1);\n     *     tmpDate.setDate(parm.date);\n     *     tmpDate.setHours(0);\n     *     tmpDate.setSeconds(0);\n     *     tmpDate.setMinutes(0);\n     *     tmpDate.setMilliseconds(0);\n     *     return tmpDate.getTime() / 1000;\n     * }\n     */\n\n    static getDayBeginTime(milliseconds: number) {\n        const tmpDate = new Date(milliseconds);\n        tmpDate.setHours(0);\n        tmpDate.setSeconds(0);\n        tmpDate.setMinutes(0);\n        tmpDate.setMilliseconds(0);\n        return tmpDate.getTime();\n    }\n\n    static waiting(time: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve();\n            }, time);\n        });\n    }\n    // 获取剩余时间\n    secondsToClock(seconds) {\n        seconds = Number(seconds);\n        const secs = seconds % 60;\n        let mins = (seconds - secs) / 60;\n        const hours = Math.floor(mins / 60);\n        if (hours > 0) {\n            mins %= 60;\n        }\n\n        return `${hours > 9 ? hours : `0${hours}`}:${mins > 9 ? mins : `0${mins}`}:${secs > 9 ? secs : `0${secs}`}`;\n    }\n\n    /**\n     * 工具方法：同步读取json文件 返回JS对像\n     * @param fileName\n     */\n    static async loadConfig(fileName: string) {\n        const url = `config/${fileName}`;\n        /*\n         * return new Promise((resolve, reject) => {\n         *     cc.resources.load(url, (err, jsonAsset: cc.JsonAsset) => {\n         *         if (err) {\n         *             Logger.debug(`[DataManager loadConfig[${fileName}]]  err:`, err);\n         *             reject();\n         *         }else{\n         *             resolve(jsonAsset.json);\n         *         }\n         *     });\n         */\n\n        // });\n        try {\n            const rst = await this.LoadRes<cc.JsonAsset>(url);\n            return rst;\n        } catch (err) {\n            return undefined;\n        }\n    }\n\n    public static LoadRes<T extends cc.Asset>(path: string): Promise<T> {\n        return new Promise((resolve, reject) => {\n            cc.resources.load(path, (err: any, res: T) => {\n                if (err) {\n                    reject(err.message || err);\n                } else {\n                    resolve(res);\n                }\n            });\n        });\n    }\n\n    private static _btnLock: boolean = false;\n    static btnLock(time: number = 500): boolean {\n        if (this._btnLock) {\n            return true;\n        }\n\n        this._btnLock = true;\n        setTimeout(() => {\n            this._btnLock = false;\n        }, time);\n        return false;\n    }\n\n    public static removeNode(node: cc.Node) {\n        if (!node || !node.parent) {\n            return;\n        }\n\n        node.removeFromParent();\n        node.destroy();\n        // node.removeFromParent();\n    }\n\n    public static removeAllChildren(node: cc.Node) {\n        if (!node) {\n            return;\n        }\n\n        // node.destroyAllChildren();\n        node.removeAllChildren();\n    }\n\n    /**\n     * 置灰\n     */\n    public static toGrey(spr: cc.RenderComponent) {\n        if (!spr) return;\n        const matName = '2d-gray-sprite';\n        const variant1 = cc.MaterialVariant.getBuiltinMaterial(matName);\n        spr.setMaterial(0, variant1);\n    }\n\n    /**\n     * 恢复彩色\n     */\n    public static toColor(spr: cc.RenderComponent) {\n        if (!spr) return;\n        const matName = '2d-sprite';\n        const variant1 = cc.MaterialVariant.getBuiltinMaterial(matName);\n        spr.setMaterial(0, variant1);\n    }\n\n    /**\n     * 指定节点下所有图片 置灰\n     */\n    public static toGreyNode(node: cc.Node) {\n        if (!node) return;\n        const sprs = node.getComponentsInChildren(cc.RenderComponent);\n        for (let i = 0; i < sprs.length; i++) {\n            const eachSpr = sprs[i];\n            this.toGrey(eachSpr);\n        }\n    }\n    /**\n     * 指定节点下所有图片 置灰\n     */\n    public static toColorNode(node: cc.Node) {\n        if (!node) return;\n        const sprs = node.getComponentsInChildren(cc.RenderComponent);\n        for (let i = 0; i < sprs.length; i++) {\n            const eachSpr = sprs[i];\n            this.toColor(eachSpr);\n        }\n    }\n\n    // 洗牌\n    public static shuffle(arr) {\n        let len = arr.length;\n        let randomIndex; let\n            temp;\n        while (len) {\n            randomIndex = Math.floor(Math.random() * (len--));\n            temp = arr[randomIndex];\n            arr[randomIndex] = arr[len];\n            arr[len] = temp;\n        }\n\n        return arr;\n    }\n\n    public static shuffle2(arr: Array<number>) {\n        let arr1: Array<number> = [];\n        let arr2: Array<number> = [];\n\n        const h = arr.length / 2;\n        for (let i = 0; i < arr.length; i++) {\n            if (i <= h) {\n                arr1.push(arr[i]);\n            } else {\n                arr2.push(arr[i]);\n            }\n        }\n\n        arr1 = this.shuffle(arr1);\n        arr2 = this.shuffle(arr2);\n        return [...arr2, ...arr1];\n    }\n    // 去重并移除逗号\n    static ilterRepeatStr(str) {\n        const rs = [].filter.call(str, (s, i, o) => o.indexOf(s) == i).join('');\n        return rs.toString().replace(/,/g, '');\n    }\n\n    static getValue(root: any, key: string) {\n        const keys = key.split('.');\n        try {\n            let value = root[keys[0]];\n            for (let i = 1; i < keys.length; i++) {\n                value = value[keys[i]];\n            }\n\n            return value;\n        } catch (err) {\n            return undefined;\n        }\n    }\n\n    /**\n     * 停留在动画的第一帧\n     * @param anim\n     * @param name\n     */\n    static animationGotoStart(anim: cc.Animation, name: string | number): void {\n        let anim_name = name;\n        if (typeof name === 'number') {\n            anim_name = anim.getClips()[name].name;\n        }\n\n        anim.play(String(anim_name), 0);\n        anim.sample(String(anim_name));\n        anim.stop();\n    }\n    /**\n     * 停留在动画的最后一帧\n     * @param anim\n     * @param name\n     */\n    static animationGotoEnd(anim: cc.Animation, name: string | number): void {\n        let anim_key = name;\n        let anim_value = name;\n        if (typeof name === 'string') {\n            for (const key in anim.getClips()) {\n                if (anim.getClips()[key].name === name) {\n                    anim_key = key;\n                    break;\n                }\n            }\n        } else if (typeof name === 'number') {\n            anim_value = anim.getClips()[name].name;\n        }\n\n        const anim_time = anim.getClips()[anim_key].duration;\n        anim.play(String(anim_value), anim_time);\n    }\n\n    /**\n     * 指定日期的星座信息\n     * @param m 月份 1~\n     * @param d 日期 1~\n     * @returns {index:星座编号(0~11) sZodiac:星座名 sBetween:所在日期区间}\n     */\n    public static GetZodiac(m: number, d: number): { index: number, sZodiac: string, sBetween: string } {\n        const s = '魔羯水瓶双鱼牡羊金牛双子巨蟹狮子处女天秤天蝎射手魔羯';\n        const arr = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];\n        let index = m - (d < arr[m - 1] ? 1 : 0);\n        index = index == 12 ? 0 : index\n        const sZodiac = `${s.substr(index * 2, 2)}座`;\n        const preMonth = (m - 2) < 0 ? 11 : +(m - 2);\n        const backMonth = (m + 1) > 12 ? 1 : +(m + 1);\n        const front = (d < arr[m - 1] ? (`${preMonth + 1}.${arr[preMonth]}`) : (`${m}.${arr[m - 1]}`));\n        const back = (d < arr[m - 1] ? `${m}.${arr[index] - 1}` : `${backMonth}.${arr[backMonth - 1] - 1}`);\n        const sBetween = `${front}-${back}`\n\n        // console.log((index + \" \" + sZodiac + \" \" + sBetween));\n\n        return { index, sZodiac, sBetween }\n    }\n\n    /**\n     * 基于某模块激活时间后的 周几 1~\n     */\n    static getGameDay(timeStart: number) {\n        timeStart = Utils.getDayBeginTime(timeStart);\n        const timeCur = Utils.getDayBeginTime(Utils.getCurTime());\n\n        const second_of_week = (timeCur - timeStart) % (7 * GlobalDefines.Second_Day);\n        const day = Math.floor(second_of_week / GlobalDefines.Second_Day) + 1;\n        return day;\n    }\n\n    /**\n     * 基于某模块激活时间后的 第几周 0~\n     */\n    static getWeek(theTime: number, timeStart: number) {\n        timeStart = Utils.getDayBeginTime(timeStart);\n        theTime = Utils.getDayBeginTime(theTime);\n\n        const week = Math.floor((theTime - timeStart) / (7 * GlobalDefines.Second_Day * 1000));\n        return week;\n    }\n\n    public static twoPointDistance(pos1, pos2) {       // 从form的表单中分别提取两个点的横、纵坐标\n        const x1 = pos1.x;   // 第一个点的横坐标\n        const y1 = pos1.y;   // 第一个点的纵坐标\n        const x2 = pos2.x;   // 第二个点的横坐标\n        const y2 = pos2.y;   // 第二个点的纵坐标\n        const xdiff = x2 - x1;            // 计算两个点的横坐标之差\n        const ydiff = y2 - y1;            // 计算两个点的纵坐标之差\n        return Math.pow((xdiff * xdiff + ydiff * ydiff), 0.5);   // 计算两点之间的距离，并将结果返回表单元素\n    }\n\n    static adaptiveNoteLayout() {\n        const winSize = cc.winSize;// 获取当前游戏窗口大小\n        cc.log(`--当前游戏窗口大小  w:${winSize.width}   h:${winSize.height}`);\n\n        const viewSize = cc.view.getFrameSize();\n        cc.log(`--视图边框尺寸：w:${viewSize.width}  h:${viewSize.height}`);\n\n        const canvasSize = cc.view.getCanvasSize();// 视图中canvas尺寸\n        cc.log(`--视图中canvas尺寸  w:${canvasSize.width}  H:${canvasSize.height}`);\n\n        const visibleSize = cc.view.getVisibleSize();\n        cc.log(`--视图中窗口可见区域的尺寸 w:${visibleSize.width}   h:${visibleSize.height}`);\n\n        const designSize = cc.view.getDesignResolutionSize();\n        cc.log(`--设计分辨率：${designSize.width}    h: ${designSize.height}`);\n    }\n\n    public static findNodeByName(root, name) {\n        if (root) {\n            let widget = root.getChildByName(name);\n            if (widget) {\n                return widget\n            }\n\n            const children = root.children\n            for (const c of children) {\n                widget = Utils.findNodeByName(c, name)\n                if (widget) {\n                    return widget\n                }\n            }\n\n            return null\n        }\n\n        return null\n    }\n\n    static getAngle(start, end) {\n        // 计算出朝向\n        const dx = end.x - start.x;\n        const dy = end.y - start.y;\n        const dir = cc.v2(dx, dy);\n\n        // 根据朝向计算出夹角弧度\n        const angle = dir.signAngle(cc.v2(1, 0));\n\n        // 将弧度转换为欧拉角\n        const degree = angle / Math.PI * 180;\n\n        return degree\n    }\n\n    // 把一个节点下的坐标转成另一个节点的坐标\n    static convertNodeToNodeSpace(node, targetParent) {\n        if (cc.isValid(node)) {\n            if (!!node.parent) {\n                const wpos = node.parent.convertToWorldSpaceAR(node.getPosition());\n\n                if (cc.isValid(targetParent)) {\n                    return targetParent.convertToNodeSpaceAR(wpos);\n                }\n            }\n        }\n\n        cc.log('坐标转换有问题');\n        return cc.v2(0, 0);\n    }\n    static randomByWeightList(weightArr: Array<number>) {\n        let allWeight = 0;\n        for (let i = 0; i < weightArr.length; i++) {\n            allWeight += weightArr[i];\n        }\n\n        const rd = Utils.randomFloat(0, allWeight);\n\n        let tmp = 0;\n        for (let i = 0; i < weightArr.length; i++) {\n            tmp += weightArr[i];\n            if (rd < tmp) {\n                return i;\n            }\n        }\n\n        return 0;\n    }\n\n    // 数组copy\n    static arrayCopy(sourceArr: Array<any>, destArr: Array<any>) {\n        if (!!sourceArr && !!destArr) {\n            for (let index = 0; index < sourceArr.length; index++) {\n                const element = sourceArr[index];\n                destArr.push(element);\n            }\n        }\n    }\n\n    /**\n     * 改变节点颜色\n     * @param node\n     * @param color\n     */\n    static changeColor(node: cc.Node, color: string) {\n        node.color = new cc.Color().fromHEX(color);\n    }\n\n    // 解密\n    static decodeAtoB(value) {\n        return decodeURIComponent(atob(value));\n    }\n\n    // 加密\n    static encodeBtoA(value) {\n        return btoa(encodeURIComponent(value));\n    }\n\n    /**\n     * 简单生成一个唯一ID\n     * @returns\n     */\n    static RandomIdString: string = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_'\n    static nextRandomId() {\n        /*\n         * let date = (new Date()).getTime();//获取时间戳\n         * if (isSimple) {\n         *     return date + \"\";\n         * }\n         */\n        const len = 8;// 机器码有多少位\n        let pwd = '';// 定义空变量用来接收机器码\n        for (let i = 0; i < len; i++) {\n            pwd += Utils.RandomIdString.charAt(Math.floor(Math.random() * Utils.RandomIdString.length));// 循环机器码位数随机填充\n        }\n\n        return pwd;\n    }\n\n    static distanceByV2(a: cc.Vec2, b: cc.Vec2) {\n        const distance = a.sub(b).mag();\n        return distance;\n    }\n    static distanceByNode(a: cc.Node, b: cc.Node) {\n        const p1 = a.getPosition();\n        const p2 = b.getPosition();\n        const distance = p1.sub(p2).mag();\n        return distance;\n    }\n    // 根据长度获取随机概率数组\n    static getRandomRates(len) {\n        const probabilities = Array.from({ length: len }, () => Math.random());\n        const sum = probabilities.reduce((a, b) => a + b, 0);\n        return probabilities.map((p) => p / sum);\n    }\n}\n"]}
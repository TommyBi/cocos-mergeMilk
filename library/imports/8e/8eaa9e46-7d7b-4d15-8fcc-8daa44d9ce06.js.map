{"version":3,"sources":["assets/script/common/comp/SceneLoadingUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { GameUtils } from \"../../game/GameUtils\";\nimport { Logger } from \"../../utils/logger\";\nimport { Utils } from \"../../utils/Utils\";\nimport NumberAction from \"./NumberAction\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SceneLoadingUI extends cc.Component {\n\n    private static _curUI: SceneLoadingUI = null;\n    public static prefab: any = null;\n    public static Prefab_Name = \"prefab/common/SceneLoadingUI\";\n\n    public static hide() {\n        // this.prefab = undefined;\n        if (this._curUI) {\n            Utils.removeNode(this._curUI.node);\n            this._curUI = undefined;\n        }\n    }\n\n    public static show() {\n        if (this._curUI) {\n            return;\n        }\n        let ins: cc.Node = cc.instantiate(SceneLoadingUI.prefab);\n        ins.parent = GameUtils.loadingLayer;\n    }\n\n    public static async preLoad() {\n        SceneLoadingUI.prefab = await Utils.loadPefab(SceneLoadingUI.Prefab_Name).catch(err => {\n            throw err;\n        });\n    }\n\n    public static setProgress(value: number) {\n        if (!this._curUI) {\n            return;\n        }\n        Logger.debug(\"[SceneLoadingUI setProgress] value:\", value);\n        this._curUI._setPorgress(value);\n    }\n\n    @property(cc.Label)\n    lb_progress:cc.Label = null;\n\n    progressBar: cc.ProgressBar = null;\n\n\n    public init(data: object) {\n        if (SceneLoadingUI._curUI) {\n            Utils.removeNode(SceneLoadingUI._curUI.node);\n        }\n        SceneLoadingUI._curUI = this;\n    }\n\n\n    private _setPorgress(value: number) {\n        value = Math.min(value, 1);\n        cc.tween(this.progressBar)\n            .to(0.2, { progress: value }, { easing: cc.easing.sineOut })\n            .call(() => {\n                if (value >= 1) {\n                    setTimeout(() => {\n                        SceneLoadingUI.hide();    \n                    }, 0);\n                }\n            })\n            .start();\n        let txt = Math.ceil(value * 100);\n        NumberAction.numberTo(this.lb_progress.node,txt);\n    }\n\n    onLoad() {\n        if (SceneLoadingUI._curUI) {\n            return;\n        }\n        SceneLoadingUI._curUI = this;\n        this.progressBar = this.node.getComponentInChildren(cc.ProgressBar);\n        this._setPorgress(0);\n    }\n}\n"]}
{"version":3,"sources":["assets/script/common/AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Logger } from \"../utils/logger\";\n\nexport default class AudioManager {\n    public static Instance: AudioManager = new AudioManager();\n\n    private constructor() {\n    }\n\n    private soundLib = {\n\n    };\n    private audioIds = {};\n\n    private hasShowIOSWebMask: null\n\n    private bgmVolume: any = null\n    private sfxVolume: any = null\n    private bgmAudioID: any = null\n\n    private curBGMUrl: any = null;\n    private _bgmEnabled: boolean = true;\n    private _sfxEnabled: boolean = true;//!GameConfig.DEBUG;\n\n    public set sfxEnabled(value: boolean) {\n        this._sfxEnabled = value;\n    }\n    public get sfxEnabled(): boolean {\n        return this._sfxEnabled;\n    }\n\n    public set bgmEnabled(enabled: boolean) {\n        this._bgmEnabled = enabled;\n    }\n    public get bgmEnabled(): boolean {\n        return this._bgmEnabled;\n    }\n\n    init() {\n        cc.log(\"audio init\");\n        this.curBGMUrl = null;\n\n        this.bgmVolume = 0.2;\n        this.sfxVolume = 1.0;\n        this.bgmAudioID = -1;\n\n        this._bgmEnabled = true;\n        this._sfxEnabled = true;\n\n\n\n    }\n\n    // 音乐\n    public playBGM(url, force) {\n        // 如果已经播放着就不播放了\n        if (this.curBGMUrl && this.curBGMUrl == url && this.bgmAudioID && !force) return;\n\n        this.curBGMUrl = url;\n        if (this._bgmEnabled) {\n            this.stopBGM();\n            //cc.url.raw(url)\n            cc.resources.load(url, function (err, clip) {\n                if (this.curBGMUrl == url) {\n                    cc.audioEngine.stopAll();\n                    this.bgmAudioID = cc.audioEngine.play(clip, true, this.bgmVolume);\n                } else {\n                    console.log(\"播放背景音乐失败:\", err)\n                }\n            }.bind(this));\n        }\n    }\n\n    public stopBGM() {\n        if (this.bgmAudioID >= 0) {\n            cc.audioEngine.stop(this.bgmAudioID);\n            this.bgmAudioID = null;\n        }\n    }\n\n    /**\n     * 同步加载声音资源\n     * @param url \n     */\n    async preloadAudioClip(soundName: string) {\n        if (!this._sfxEnabled) {\n            return;\n        }\n\n        cc.resources.preload(`sounds/${soundName}`, cc.AudioClip)\n    }\n\n    // 音效\n    public playSFX(url: string, sfxVolume: any = this.sfxVolume, ext: string = \".mp3\", loop: boolean = false, isFromNet: boolean = false, onStart?: Function) {\n        if (this._sfxEnabled) {\n            if (this.soundLib[`${url}`]) {\n                // Logger.debug(\"[AudioManager playSFX] \", url);\n                const audioId = cc.audioEngine.play(this.soundLib[`${url}`], loop, sfxVolume);\n                onStart && onStart();\n            } else {\n                if (isFromNet) {\n                    if (!url.startsWith(\"https://\")) {\n                        onStart && onStart();\n                        return;\n                    }\n                    cc.assetManager.loadRemote(url, { ext: ext }, (err, clip: cc.AudioClip) => {\n                        if (!err) {\n                            // Logger.debug(\"[AudioManager playSFX] \", url);\n                            const audioId = cc.audioEngine.play(clip, loop, sfxVolume);\n                            this.audioIds[url] = audioId;\n                        } else {\n                            Logger.debug(err);\n                        }\n                        onStart && onStart();\n                    });\n                } else {\n                    cc.resources.load(url, ((err, clip: cc.AudioClip) => {\n                        if (!err) {\n                            // Logger.debug(\"[AudioManager playSFX] \", url);\n                            const audioId = cc.audioEngine.play(clip, loop, sfxVolume);\n                            this.soundLib[`${url}`] = clip;\n                            this.audioIds[url] = audioId;\n                        } else {\n                            Logger.debug(err);\n                        }\n                        onStart && onStart();\n                    }));\n                }\n            }\n        } else {\n            onStart && onStart();\n        }\n    }\n    public stopSfxByUrl(url) {\n        let audioId = this.audioIds[url];\n        if (audioId != null) {\n            cc.audioEngine.stop(audioId);\n        }\n    }\n\n    public stopSFX(audioId) {\n        Logger.debug(\"audioId\", audioId)\n        if (audioId != null) {\n            cc.audioEngine.stop(audioId);\n        }\n    }\n\n    //change\n    public getSFXEnabled() {\n        return this.sfxEnabled;\n    }\n\n\n    public getBGMEnabled() {\n        return this.bgmEnabled;\n    }\n\n    // 暂停\n    public pauseBGM() {\n        if (this.bgmAudioID >= 0) {\n            cc.audioEngine.pause(this.bgmAudioID);\n        }\n    }\n\n    // 恢复\n    public resumeBGM() {\n        if (this.bgmAudioID >= 0) {\n            cc.audioEngine.resume(this.bgmAudioID);\n        }\n    }\n\n    // 卸载音效\n    uncache(url) {\n        const audioUrl: any = cc.url.raw(url);\n        cc.audioEngine.uncache(audioUrl);\n        this.soundLib[`${url}`] = undefined;\n    }\n\n    uncacheAll() {\n        cc.audioEngine.uncacheAll();\n        this.soundLib = {};\n    }\n\n    pauseAll() {\n        Logger.debug('Pause All Sound');\n        cc.audioEngine.pauseAll();\n    }\n\n    resumeAll() {\n        Logger.debug('Resum All Sound');\n        cc.audioEngine.resumeAll();\n    }\n\n    stopAll() {\n        cc.audioEngine.stopAll();\n    }\n\n    clean() {\n        this.stopAll();\n        this.uncacheAll();\n        this.curBGMUrl = null;\n        this.bgmAudioID = -1;\n    }\n}\nexport const sd = AudioManager.Instance;"]}